<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util-3.2.xsd">

        <!-- Define any javax.servlet.Filter beans you want anywhere in this application context.   -->
        <!-- They will automatically be acquired by the 'shiroFilter' bean above and made available -->
        <!-- to the 'filterChainDefinitions' property.  Or you can manually/explicitly add them     -->
        <!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for more details.       -->
        <!-- <bean id="someFilter" class="..."/>
        <bean id="anotherFilter" class="..."> ... </bean> -->
        
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realm" ref="myRealm"/>
            <property name="rememberMeManager" ref="rememberMeManager" />
            <property name="cacheManager" ref="cacheManager"/>
        </bean>
        
        <!-- 缓存管理器 使用Ehcache实现  声明 -->
		<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
			<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
		</bean>
		
        <!-- 4. 配置 LifecycleBeanPostProcessor. 可以自定的来调用配置在 Spring IOC 容器中 shiro bean 的生命周期方法. -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        
        <!-- 5. 启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用.-->     
	    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	          depends-on="lifecycleBeanPostProcessor"/>
	    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	        <property name="securityManager" ref="securityManager"/>
	    </bean>
        <!-- 自定义realm -->
        <bean id="myRealm" class="com.whty.assis.sysres.shiro.MyRealm"></bean>
        <!-- 会话Cookie模板 -->  
        <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
             <constructor-arg value="rememberMe" />
             <property name="httpOnly" value="true" />
             <property name="maxAge" value="86400" /><!-- 365天 -->
        </bean>
        <!-- rememberMe管理器 -->
        <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
            <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
            <property name="cookie" ref="rememberMeCookie" />
        </bean>
        
        <!-- 自定义拦截 -->
        <bean id="loginAuthFilter" class="com.whty.assis.sysres.shiro.LoginAuthFilter"/>
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            <property name="loginUrl" value="/login.jsp"/>
            <!-- <property name="successUrl" value="/main"/>
            <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
            <property name="filters">
                <util:map>
                    <entry key="loginAuthFilter" value-ref="loginAuthFilter"/>
                </util:map>
            </property> 
            <property name="filterChainDefinitions">
	            <value>
	            	/login.jsp = anon
	            	/manage/user/login = anon
	            	/manage/user/quit = logout
		            /js/** = anon
		            /** = loginAuthFilter
	            </value>
	        </property>
        </bean>
</beans>