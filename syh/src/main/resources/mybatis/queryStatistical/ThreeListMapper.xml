<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ThreeListMapper">
  <resultMap id="BaseResultMap" type="ThreeList">
    <result column="UNIT_NAME" jdbcType="VARCHAR" property="unitName" />
    <result column="INTRGRAL" jdbcType="VARCHAR" property="intrgral" />
    <result column="GOLD" jdbcType="VARCHAR" property="gold" />
    <result column="SILVER" jdbcType="VARCHAR" property="silver" />
    <result column="COPPER" jdbcType="VARCHAR" property="copper" />
    <result column="TOTAL" jdbcType="VARCHAR" property="total" />
    <result column="CARRYGOLD" jdbcType="VARCHAR" property="carryGold" />
  </resultMap>
  
  <resultMap id="BaseResultUnitMap" type="ThreeListUnit" extends="BaseResultMap">  
    	<result column="UNIT_CID" jdbcType="VARCHAR" property="unitCid" />
  </resultMap> 
  
  <sql id="Base_Column_List">
		UNIT_NAME,INTRGRAL,GOLD,SILVER,COPPER,TOTAL,CARRYGOLD
  </sql>
  <!-- 参赛明细 -->
  <sql id="Base_Column_detail">
		select `v`.`UNIT_CID` AS `CID`,`v`.`UNIT_NAME` AS `UNIT_NAME`,
		convert(sum(`v`.`INTRGRAL`) ,decimal(10,2)) AS `INTRGRAL`,
		convert(sum((case when (`v`.`MEDAL` = '0') then `v`.`MEDAL_NUM` else 0 end)) ,decimal(10,2))  AS `GOLD`,
		convert(sum((case when (`v`.`MEDAL` = '1') then `v`.`MEDAL_NUM` else 0 end)),decimal(10,2))  AS `SILVER`,
		convert(sum((case when (`v`.`MEDAL` = '2') then `v`.`MEDAL_NUM` else 0 end)) ,decimal(10,2))  AS `BRONZE` 
		from (select distinct `v1`.`INTRGRAL` AS `INTRGRAL`,`v1`.`MEDAL` AS `MEDAL`,`v1`.`MEDAL_NUM` AS `MEDAL_NUM`,`v1`.`UNIT_CID` AS `UNIT_CID`,`v1`.`UNIT_NAME` AS `UNIT_NAME`,`v1`.`ISCOMBINATION_TEAM` AS `ISCOMBINATION_TEAM`,`v1`.`ISINDIVIDUAL` AS `ISINDIVIDUAL`,`v1`.`UNIT_NUM` AS `UNIT_NUM`,`v1`.`ATHLETE_NUM` AS `ATHLETE_NUM`,`v1`.`CID` AS `CID` from `syh`.`view_particpat_basic` `v1`
 		where (`v1`.`ATHLETES_TYPE` = #{type,jdbcType=INTEGER}) AND (`v1`.`ERSION_NUM` = #{ersionNum,jdbcType=INTEGER})
  </sql>
  <sql id="order_all">
   		<!-- 排序：金银铜、奖牌、总分 -->
   		<if test="order ==0">
			 ORDER BY `GOLD` DESC,`SILVER` DESC,`COPPER` DESC,`TOTAL` DESC,`INTRGRAL` DESC
		</if>
   		<!-- 排序：奖牌、金银铜、总分 -->
   		<if test="order ==1">
			 ORDER BY `TOTAL` DESC,`GOLD` DESC,`SILVER` DESC,`COPPER` DESC,`INTRGRAL` DESC
		</if>
   		<!-- 排序：总分、金银铜、奖牌 -->
   		<if test="order ==2">
			ORDER BY `INTRGRAL` DESC,`GOLD` DESC,`SILVER` DESC,`COPPER` DESC,`TOTAL` DESC
		</if>
  </sql>
  <!-- 三榜  -->
  <select id="queryThreeList" parameterType="java.lang.Integer" resultMap="BaseResultMap">		
	<!-- 当类型为青少年金牌榜时需关联统计输送金牌 -->
	<if test="type==2 and order ==0">
		select u.UNIT_NAME,u.INTRGRAL,u.GOLD,u.SILVER,u.COPPER,u.TOTAL,p.CARRYGOLD
		FROM(
	</if>	
		select `v`.`CID` AS `CID`,`v`.`UNIT_NAME` AS `UNIT_NAME`,sum(`v`.`INTRGRAL`) AS `INTRGRAL`,sum(`v`.`GOLD`) AS `GOLD`,sum(`v`.`SILVER`) AS `SILVER`,sum(`v`.`BRONZE`) AS `COPPER`,(sum(`v`.`GOLD`) + sum(`v`.`SILVER`) + sum(`v`.`BRONZE`)) AS `TOTAL` from 
		(
		<include refid="Base_Column_detail" /> and `v1`.`ATHLETE_NUM` = 1) `v` group by `v`.`UNIT_NAME`
		union 
		<include refid="Base_Column_detail" /> and (`v1`.`ATHLETE_NUM` > 1) and (`v1`.`UNIT_NUM` = 1)) `v` group by `v`.`UNIT_NAME` 
		union 
		<include refid="Base_Column_detail" /> and (`v1`.`ATHLETE_NUM` > 1) and (`v1`.`UNIT_NUM` > 1)) `v` group by `v`.`UNIT_NAME`
		) `v` group by `v`.`CID` 
	<if test="type==2 and order ==0">
			) as u 
		LEFT JOIN
			(SELECT COMPANY_CID,convert(SUM(MEDAL_COUNT) ,decimal(10,2)) AS CARRYGOLD
			FROM
			pub_rew_info 
			WHERE
			INFO_TYPE = 0 AND
			MEDAL_TYPE = 0
			GROUP BY
			COMPANY_CID) as p
		on u.CID = p.COMPANY_CID
	</if>
	<include refid="order_all" />
   </select>
   
  <!-- 三榜单位统计  -->
  <select id="queryThreeUnitList" parameterType="java.lang.Integer" resultMap="BaseResultUnitMap">		
		select `v`.`CID` AS `UNIT_CID`,`v`.`UNIT_NAME` AS `UNIT_NAME`,sum(`v`.`INTRGRAL`) AS `INTRGRAL`,sum(`v`.`GOLD`) AS `GOLD`,sum(`v`.`SILVER`) AS `SILVER`,sum(`v`.`BRONZE`) AS `COPPER`,(sum(`v`.`GOLD`) + sum(`v`.`SILVER`) + sum(`v`.`BRONZE`)) AS `TOTAL` from 
		(
		<include refid="Base_Column_detail" /> and `v1`.`ATHLETE_NUM` = 1) `v` group by `v`.`UNIT_NAME`
		union 
		<include refid="Base_Column_detail" /> and (`v1`.`ATHLETE_NUM` > 1) and (`v1`.`UNIT_NUM` = 1)) `v` group by `v`.`UNIT_NAME` 
		union 
		<include refid="Base_Column_detail" /> and (`v1`.`ATHLETE_NUM` > 1) and (`v1`.`UNIT_NUM` > 1)) `v` group by `v`.`UNIT_NAME`
		) `v` group by `v`.`CID` 
	<include refid="order_all" />
   </select>
   
  
</mapper>