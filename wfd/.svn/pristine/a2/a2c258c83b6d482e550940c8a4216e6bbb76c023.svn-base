package com.whty.wfd.page.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.interceptor.TransactionAspectSupport;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.whty.wfd.common.utils.GUIDGenerator;
import com.whty.wfd.common.utils.SendMessageUtils;
import com.whty.wfd.common.utils.SysConfigUtils;
import com.whty.wfd.common.utils.TimeUtils;
import com.whty.wfd.page.dao.TPlatePostEditMapper;
import com.whty.wfd.page.dao.TPlatePostImgMapper;
import com.whty.wfd.page.dao.TPlatePostMapper;
import com.whty.wfd.page.dao.TPlateUserMapper;
import com.whty.wfd.page.dao.TPostMessageMapper;
import com.whty.wfd.page.dao.TUserMapper;
import com.whty.wfd.page.model.TPlatePost;
import com.whty.wfd.page.model.TPlatePostEdit;
import com.whty.wfd.page.model.TPlatePostEditExample;
import com.whty.wfd.page.model.TPlatePostExample;
import com.whty.wfd.page.model.TPlatePostImg;
import com.whty.wfd.page.model.TUser;
import com.whty.wfd.page.service.PostService;

/**
 * \* User: zjd \* Date: 2018/8/21 \* Time: 16:04 \* Description: \
 */
@Service
public class PostServiceImpl implements PostService {

	@Autowired
	private TPlatePostMapper tPlatePostMapper;
	@Autowired
	private TPlatePostImgMapper tPlatePostImgMapper;
	@Autowired
	private TPostMessageMapper tPostMessageMapper;
	@Autowired
	private TPlatePostEditMapper tPlatePostEditMapper;
	@Autowired
	private TPlateUserMapper tPlateUserMapper;
	@Autowired
	private TUserMapper tUserMapper;

	@Override
	public PageInfo<TPlatePost> getPostByUserId(Integer userId, Integer pageNum, Integer pageSize) {
		PageHelper.startPage(pageNum, pageSize);
		List<TPlatePost> tPlatePosts = tPlatePostMapper.getPostByUserId(userId);
		PageInfo<TPlatePost> p = new PageInfo<>(tPlatePosts);
		return p;
	}

	@Override
	@Transactional(rollbackFor = { Exception.class })
	public void addPost(TUser tUser, TPlatePost tPlatePost, List<TPlatePostImg> tPlatePostImgs, Integer[] userIds) {
		try {
			if (tPlatePostImgs.size() > 0) {
				tPlatePostImgMapper.insertManyImg(tPlatePostImgs);
			}
			TPlatePostEditExample editExample = new TPlatePostEditExample();
			editExample.createCriteria().andCreatorEqualTo(tPlatePost.getCreator());
			tPlatePostEditMapper.deleteByExample(editExample);

			final List<String> sendeeIds = tPlateUserMapper.selectByPlateId(tPlatePost.getPlateId());
			if (userIds != null && userIds.length > 0) {
				String reg = "";
				String content = tPlatePost.getContent();
				for (Integer userId : userIds) {
					TUser enUser = tUserMapper.selectByPrimaryKey(userId);
					reg = "@" + enUser.getName();
					if (content.contains(reg)) {
						content = content.replace(reg, "<span class=\"icon_atWho\">" + reg + "</span>");
						sendeeIds.add(enUser.getPersonId());
					}
				}
				tPlatePost.setContent(content);
			}
			tPlatePostMapper.insert(tPlatePost);
			final String wfdUrl = SysConfigUtils.getStrValue("domain") + "/getPostDetail?postId=" + tPlatePost.getId()
					+ "&plateId=" + tPlatePost.getPlateId();

			final TUser threaBean = tUser;
			final TPlatePost threaTPlatePost = tPlatePost;
			new Thread(new Runnable() {
				@Override
				public void run() {
					SendMessageUtils.sendOaMessage(threaBean, sendeeIds, wfdUrl, threaTPlatePost.getContent(),
							threaBean.getName()+"回复了你的消息", TimeUtils.date2String(new Date(), TimeUtils.DAY_FORMAT_1));
				}
			}).start();
		} catch (Exception e) {
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			e.printStackTrace();
		}

	}

	@Override
	public PageInfo<TPlatePost> getPostByPlateIdAllPage(String plateId, Integer pageNum, Integer pageSize,
			Integer userId, String orderByClause) {
		PageHelper.startPage(pageNum, 30);
		List<TPlatePost> tPlatePosts = tPlatePostMapper.getPostByPlateId(plateId, userId, orderByClause);
		PageInfo<TPlatePost> p = new PageInfo<>(tPlatePosts);
		return p;
	}

	@Override
	public PageInfo<TPlatePost> getPostByPlateIdAllTeacherPage(String plateId, Integer pageNum, Integer pageSize,
			Integer userId, String orderByClause) {
		PageHelper.startPage(pageNum, 30);
		List<TPlatePost> tPlatePosts = tPlatePostMapper.getPostByPlateIdAllTeacher(plateId, userId, orderByClause);
		PageInfo<TPlatePost> p = new PageInfo<>(tPlatePosts);
		return p;
	}

	@Override
	public PageInfo<TPlatePost> getPostByPlateIdAllMasterPage(String plateId, Integer pageNum, Integer pageSize,
			Integer userId, String orderByClause, Integer schoolId) {
		PageHelper.startPage(pageNum, 30);
		List<TPlatePost> tPlatePosts = tPlatePostMapper.getPostByPlateIdAll(plateId, userId, orderByClause, schoolId);
		PageInfo<TPlatePost> p = new PageInfo<>(tPlatePosts);
		return p;
	}

	@Override
	public List<TPlatePost> getPostByPlateIdAll(String plateId, Integer userId, String orderByClause) {
		return tPlatePostMapper.getPostByPlateIdIsTop(plateId, userId, orderByClause);
	}

	@Override
	public List<TPlatePost> getPostByPlateIdAllTeacher(String plateId, Integer userId, String orderByClause) {
		return tPlatePostMapper.getPostByPlateIdAllTeacherIsTop(plateId, userId, orderByClause);
	}

	@Override
	public List<TPlatePost> getPostByPlateIdAllMaster(String plateId, Integer userId, String orderByClause) {
		return tPlatePostMapper.getPostByPlateIdAllIsTop(plateId, userId, orderByClause);
	}

	@Override
	public TPlatePost getPostByPostId(String postId, Integer userId) {
		return tPlatePostMapper.getPostByPostId(postId, userId);
	}

	@Override
	@Transactional(rollbackFor = { Exception.class })
	public int updatePostByPostId(TPlatePost tPlatePost) {
		try {
			TPlatePost entity = tPlatePostMapper.selectByPrimaryKey(tPlatePost.getId());
			TPlatePostExample tPlatePostExample = new TPlatePostExample();
			tPlatePostExample.createCriteria().andPlateIdEqualTo(entity.getPlateId()).andIsTopEqualTo(true);
			tPlatePostExample.setOrderByClause("create_time");
			List<TPlatePost> list = tPlatePostMapper.selectByExample(tPlatePostExample);
			if (list.size() >= 3) {
				list.get(0).setIsTop(false);
				tPlatePostMapper.updateByPrimaryKeySelective(list.get(0));
			}
			return tPlatePostMapper.updateByPrimaryKeySelective(tPlatePost);
		} catch (Exception e) {
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	@Transactional(rollbackFor = { Exception.class })
	public int deletePostByPostId(TPlatePost tPlatePost) {
		int i = 0;
		try {
			tPlatePostMapper.updateByPrimaryKeySelective(tPlatePost);
			tPostMessageMapper.updateByPostId(tPlatePost.getId());
			i = 1;
		} catch (Exception e) {
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			e.printStackTrace();
		}
		return i;
	}

	@Override
	public int savePostContent(Integer userId, String content, String plateId) {
		TPlatePostEditExample example = new TPlatePostEditExample();
		example.createCriteria().andCreatorEqualTo(userId);
		List<TPlatePostEdit> list = tPlatePostEditMapper.selectByExample(example);
		TPlatePostEdit tPlatePostEdit = new TPlatePostEdit();
		if (list.size() > 0) {
			tPlatePostEdit = list.get(0);
			tPlatePostEdit.setContent(content);
			tPlatePostEdit.setUpdateTime(new Date());
			tPlatePostEdit.setCreator(userId);
			tPlatePostEdit.setPlateId(plateId);
			return tPlatePostEditMapper.updateByPrimaryKey(tPlatePostEdit);
		}
		tPlatePostEdit.setContent(content);
		tPlatePostEdit.setCreateTime(new Date());
		tPlatePostEdit.setUpdateTime(new Date());
		tPlatePostEdit.setCreator(userId);
		tPlatePostEdit.setId(GUIDGenerator.getGUID());
		tPlatePostEdit.setPlateId(plateId);
		return tPlatePostEditMapper.insert(tPlatePostEdit);
	}

	@Override
	public int deletePostContent(String id) {
		return tPlatePostEditMapper.deleteByPrimaryKey(id);
	}

	@Override
	public TPlatePostEdit getTPlatePostEditByUserId(Integer userId) {
		TPlatePostEditExample example = new TPlatePostEditExample();
		example.createCriteria().andCreatorEqualTo(userId);
		List<TPlatePostEdit> list = tPlatePostEditMapper.selectByExample(example);
		return list.size() > 0 ? list.get(0) : null;
	}

	@Override
	public TPlatePost selectByKey(String postId) {
		return tPlatePostMapper.selectByPrimaryKey(postId);
	}
}